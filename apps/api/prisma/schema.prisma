generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Token {
  id           String  @id
  chain        String
  address      String
  symbol       String?
  createdAt    DateTime @default(now())
  marketSnaps  MarketSnapshot[]
  socialSnaps  SocialSnapshot[]
  signals      Signal[]
  prophecies   Prophecy[]
  tweets       Tweet[]
}

model MarketSnapshot {
  id         String   @id @default(cuid())
  tokenId    String
  volume1h   Float
  volume24h  Float
  liquidity  Float
  price      Float
  ageMin     Int
  at         DateTime @default(now())
  token      Token    @relation(fields: [tokenId], references: [id])
  @@index([tokenId, at])
}

model SocialSnapshot {
  id          String   @id @default(cuid())
  tokenId     String
  mentions1h  Int
  mentions24h Int
  slope       Float
  // sentiment aggregation from Hugging Face
  sentimentScore   Float?
  positiveRatio    Float?
  negativeRatio    Float?
  sentimentAnalyzed Int?
  at          DateTime @default(now())
  token       Token    @relation(fields: [tokenId], references: [id])
  @@index([tokenId, at])
}

model Tweet {
  id                String   @id @default(cuid())
  tokenId           String
  tweetId           String   @unique
  text              String
  author            String
  authorDisplayName String?
  // sentiment for this tweet
  sentimentLabel    String?
  sentimentScore    Float?
  sentimentAnalyzedAt DateTime?
  createdAt         DateTime
  collectedAt       DateTime @default(now())
  likes             Int      @default(0)
  retweets          Int      @default(0)
  replies           Int      @default(0)
  relevanceScore    Float?
  token             Token    @relation(fields: [tokenId], references: [id])

  @@index([tokenId, createdAt])
  @@index([createdAt])
}

model Signal {
  id       String   @id @default(cuid())
  tokenId  String
  score    Float
  label    SignalLabel
  reasons  Json
  at       DateTime @default(now())
  token    Token    @relation(fields: [tokenId], references: [id])
  @@index([at, score])
}

model Prophecy {
  id              String   @id @default(cuid())
  tokenId         String
  signalHash      String
  score           Float
  rank            Int
  txHash          String?
  postedAt        DateTime @default(now())
  token           Token    @relation(fields: [tokenId], references: [id])
  criteria        Json
  thesis          String?
  thesisProvider  String?
  thesisConfidence Float?
  narrativeScore  Float?
  criteriaMatched Json?
  socialSignals   Json?
  @@unique([signalHash])
}

enum SignalLabel {
  HYPE_BUILDING
  WHALE_PLAY
  FAKE_PUMP
  DEAD_ZONE
  SOCIAL_SPIKE
}
