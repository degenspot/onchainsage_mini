version: '3.8'
services:
  redis:
    image: redis:6.2-alpine
    ports:
      - '6379:6379'
    command: redis-server --save "" --appendonly no
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5

  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: onchainsage_test
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d onchainsage_test"]
      interval: 2s
      timeout: 5s
      retries: 5

  worker:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
    env_file:
      - apps/worker/.env.test
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    env_file:
      - apps/worker/.env.test
    ports:
      - '3001:3001'
    depends_on:
      db:
        condition: service_healthy

  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test # Assumes a Dockerfile for the test runner exists
    env_file:
      - apps/worker/.env.test
    depends_on:
      - worker
      - api
    command: pnpm test:pipeline

volumes:
  postgres_data:
